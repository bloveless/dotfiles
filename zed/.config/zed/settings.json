// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
// For reference: https://romanzipp.com/blog/must-have-zed-settings
{
  "context_servers": {},
  "auto_install_extensions": {
    "catppuccin-icons": true,
    "golangci-lint": true
  },
  "minimap": {
    "show": "auto",
    "thumb": "always",
    "thumb_border": "none"
  },
  "preview_tabs": {
    "enabled": true,
    "enable_preview_from_file_finder": true,
    "enable_preview_from_code_navigation": true
  },
  "theme": {
    "dark": "Catppuccin Macchiato",
    "light": "Catppuccin Latte",
    "mode": "system"
  },
  "icon_theme": "Catppuccin Macchiato",
  "vim_mode": true,
  "vim": {
    "use_smartcase_find": true,
    "use_system_clipboard": "always"
  },
  "buffer_font_family": "Fira Code",
  "buffer_font_size": 12,
  "buffer_line_height": {
    "custom": 2
  },
  "buffer_font_features": {
    // disable ligatures
    "calt": false
  },
  "ui_font_family": "Fira Code",
  "ui_font_features": {
    // disable ligatures
    "calt": false
  },
  "ui_font_size": 12,
  "agent_font_size": 13,
  "show_whitespaces": "selection",
  "preferred_line_length": 120,
  "wrap_guides": [120],
  "tab_size": 4,
  "tabs": {
    "file_icons": true,
    "git_status": true,
    "show_diagnostics": "all"
  },
  "vertical_scroll_margin": 15,
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false
  },
  "features": {
    "edit_prediction_provider": "copilot"
  },
  "show_edit_predictions": true,
  "edit_predictions": {
    "enabled_in_text_threads": false,
    "mode": "subtle"
  },
  "agent": {
    "default_profile": "ask",
    "inline_assistant_model": {
      "provider": "google-vertex-ai",
      "model": "gemini-2.5-pro"
    },
    "always_allow_tool_actions": true,
    "default_model": {
      "provider": "copilot_chat",
      "model": "gemini-2.5-pro"
    }
  },
  "outline_panel": {
    "dock": "right"
  },
  "bottom_dock_layout": "contained",
  "project_panel": {
    "indent_size": 10
  },
  "inline_code_actions": false,
  "terminal": {
    "shell": {
      "program": "/opt/homebrew/bin/fish"
    }
  },
  "file_types": {
    "Blade": ["*.blade.php"],
    "Helm": [
      "**/templates/**/*.tpl",
      "**/templates/**/*.yaml",
      "**/templates/**/*.yml",
      "**/helmfile.d/**/*.yaml",
      "**/helmfile.d/**/*.yml"
    ],
    "SQL": ["ddl", "dml"],
    "JSON": ["jsonl"]
  },
  "languages": {
    "Elixir": {
      "tab_size": 2
    },
    "Go": {
      "language_servers": ["gopls", "golangci-lint"]
    },
    "JSON": {
      "prettier": {
        "allowed": false
      },
      "tab_size": 2
    },
    "JSONC": {
      "tab_size": 2
    },
    "JavaScript": {
      "formatter": {
        "external": {
          "arguments": ["prettier", "--stdin-filepath", "{buffer_path}"],
          "command": "npx"
        }
      }
    },
    "Markdown": {
      // do not remove any trailing whitespace since line breaks in
      // lists (without adding a new punctuation) rely on whitespaces.
      "remove_trailing_whitespace_on_save": false,
      // Wrap text according to the previously defined preferred line length.
      "soft_wrap": "preferred_line_length"
    },
    "Nix": {
      "tab_size": 2,
      "formatter": {
        "external": {
          "command": "alejandra", // or "nixfmt"
          "arguments": ["--quiet", "--"]
        }
      }
    },
    "PHP": {
      "prettier": {
        "allowed": false
      }
    },
    "Proto": {
      "format_on_save": "off",
      "tab_size": 2,
      "formatter": {
        "external": {
          "arguments": ["format", "{buffer_path}"],
          "command": "buf"
        }
      }
    },
    "SQL": {
      "format_on_save": "off"
    },
    "YAML": {
      "tab_size": 2
    }
  },
  "language_models": {
    "google_vertex": {
      "api_url": "https://aiplatform.googleapis.com",
      "location_id": "us-central1",
      "project_id": "product360-nonprod"
    }
  },
  "lsp": {
    "protobuf-language-server": {
      "binary": {
        "path": "buf",
        "arguments": ["beta", "lsp", "--timeout=0", "--log-format=text"]
      }
    },
    // this needs to be installed manually with `go install github.com/bloveless/golangci-lint-langserver@latest`
    "golangci-lint": {
      "initialization_options": {
        "command": [
          "golangci-lint",
          "run",
          "--allow-parallel-runners",
          "--output.json.path=stdout",
          "--show-stats=false",
          "--issues-exit-code=1"
        ]
      }
    },
    "gopls": {
      "initialization_options": {
        "gofumpt": true,
        "local": "github.com/bayer-int,github.com/shadowglass-xyz,github.com/bloveless"
      }
    }
  }
}
